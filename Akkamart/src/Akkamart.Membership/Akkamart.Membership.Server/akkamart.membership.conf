akka {
    actor {
        serializers.hyperion = "Akka.Serialization.HyperionSerializer, Akka.Serialization.Hyperion"
        serialization-bindings { "System.Object" = hyperion }
        provider = "Akka.Cluster.ClusterActorRefProvider, Akka.Cluster"
    }

    remote {
        dot-netty.tcp {
            port = 0
            hostname = {{OWN_HOST}}
        }
    }

    cluster {
        seed-nodes = ["akka.tcp://akkamart@{{SEED_NODE_HOST}}:{{SEED_NODE_PORT}}"]
        roles = [memberships]
    }
    persistence {
        journal {
            # set default plugin
            plugin = "akka.persistence.journal.sql-server"
            sql-server {
				event-adapters {
					tagging = "Akkamart.Membership.TaggingAdapter,Akkamart.Membership"
				}
				# event-adapter-bindings {
				# 	"Domain.Memberhsip.IEvent,UgKaCAkkamart.Apiqrs" = tagging
				# }
				class = "Akka.Persistence.SqlServer.Journal.SqlServerJournal, Akka.Persistence.SqlServer"
				schema-name = dbo
				auto-initialize = on
                connection-string = "{{SQLSERVER_CONNECTION}}"
            }

            # a separate config used by cluster sharding only 
            sharding {
                connection-string = "{{SQLSERVER_CONNECTION}}"
                auto-initialize = on
                plugin-dispatcher = "akka.actor.default-dispatcher"
                class = "Akka.Persistence.SqlServer.Journal.SqlServerJournal, 
				Akka.Persistence.SqlServer"
                connection-timeout = 30s
                schema-name = dbo
                table-name = ShardingJournal
                timestamp-provider = "Akka.Persistence.Sql.Common.Journal.DefaultTimestampProvider, 
				Akka.Persistence.Sql.Common"
                metadata-table-name = ShardingMetadata
            }
        }
        snapshot-store {
            sharding {
                class = "Akka.Persistence.SqlServer.Snapshot.SqlServerSnapshotStore,
				 Akka.Persistence.SqlServer"
                plugin-dispatcher = "akka.actor.default-dispatcher"
                connection-string = "{{SQLSERVER_CONNECTION}}"
                connection-timeout = 30s
                schema-name = dbo
                table-name = ShardingSnapshotStore
                auto-initialize = on
            }
        }
		query.sql {
			class = "Akka.Persistence.Query.Sql.SqlReadJournalProvider, Akka.Persistence.Query.Sql"
			write-plugin = ""
			refresh-interval = 50ms
			max-buffer-size = 100
		}
    }
}
